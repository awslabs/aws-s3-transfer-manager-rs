name: Publish to crates.io

# on:
#   push:
#     tags:
#       - 'v*'

on:
  pull_request: # Test trigger

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1
  # Change to specific Rust release to pin
  rust_stable: stable
  rust_nightly: nightly-2024-07-07
  # When updating this, also update relevant docs
  rust_min: '1.81'
  RELEASE_ROLE_ARN: ${{ secrets.RELEASE_ROLE_ARN }}
  TOKEN_KEY_NAME: ${{ secrets.TOKEN_KEY_NAME }}
  AWS_REGION: us-west-2
  # Test values
  TEST_DRY_RUN: 'true'

permissions:
  id-token: write  # This is required for requesting the JWT

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust ${{ env.rust_nightly }}
        uses: dtolnay/rust-toolchain@stable
        with:
            toolchain: ${{ env.rust_stable }}

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - uses: Swatinem/rust-cache@v2

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.RELEASE_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Cargo registry token
        shell: bash
        id: cargo-registry-token
        run: |
          CARGO_REGISTRY_TOKEN=$(aws secretsmanager get-secret-value --secret-id ${{ secrets.TOKEN_KEY_NAME }} --region ${{ env.AWS_REGION }} | jq -r ".SecretString")
          echo "::add-mask::$CARGO_REGISTRY_TOKEN"
          echo "token=$CARGO_REGISTRY_TOKEN" >> $GITHUB_OUTPUT

      - name: Yank previous version (for testing token)
        shell: bash
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.cargo-registry-token.outputs.token }}
        run: |
          # This version has already been yanked. This command succeeds if we have a token with permission to yank the crate.
          cargo yank aws-sigv4 --version 0.55.0

      - name: Publish (dry-run)
        if: ${{ env.TEST_DRY_RUN == 'true' }}
        shell: bash
        working-directory: ./aws-s3-transfer-manager/
        run: |
          echo "Running cargo publish in dry-run mode"
          cargo publish --dry-run

      # - name: Publish (actual)
      #   if: ${{ env.TEST_DRY_RUN != 'true' }}
      #   shell: bash
      #   working-directory: ./aws-s3-transfer-manager/
      #   env:
      #     CARGO_REGISTRY_TOKEN: ${{ steps.cargo-registry-token.outputs.token }}
      #   run: |
      #     echo "Publishing to crates.io"
      #     cargo publish
